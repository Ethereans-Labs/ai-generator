{"version":3,"file":"extension.js","mappings":"uuBAEA,oBAAyBA,GACvBC,QAAQC,IACN,mEAIF,IAAIC,EAAUC,EAAOC,SAASC,gBAC5B,0BACA,KACE,IAAIC,EAAQH,EAAOI,OAAOC,mBACxB,UACA,WACAL,EAAOM,WAAWC,IAClB,CACEC,eAAe,IAIfC,EAAYN,EAAMJ,QAAQW,aAC5BV,EAAOW,IAAIC,SACThB,EAAQiB,aACR,QACA,QACA,SACA,KACA,qBAGAC,EAASX,EAAMJ,QAAQW,aACzBV,EAAOW,IAAIC,SACThB,EAAQiB,aACR,QACA,QACA,SACA,MACA,sBAIJhB,QAAQC,IAAI,cAAegB,EAAOC,YAClClB,QAAQC,IAAI,iBAAkBW,EAAUM,YAExCZ,EAAMJ,QAAQiB,KAAO,8FAITF,qKAKCL,mCAEX,IAKNb,EAAQqB,cAAcC,KACpBlB,EAAOI,OAAOe,4BACZ,4BACA,IAAIC,EAAsBxB,KAI9BA,EAAQqB,cAAcC,KAAKnB,EAC7B,EA0DA,wBAA8B,EA9H9B,kBAsEA,MAAMqB,EACIC,SAER,WAAAC,CAAY1B,GACV2B,KAAKF,SAAWzB,CAClB,CAEA,kBAAA4B,CACEC,EACA7B,EACA8B,GAEAD,EAAY1B,QAAQ4B,QAAU,CAC5BnB,eAAe,GAGjB,IAAIC,EAAYgB,EAAY1B,QAAQW,aAClCV,EAAOW,IAAIC,SACTW,KAAKF,SAASR,aACd,QACA,QACA,SACA,KACA,qBAGAC,EAASW,EAAY1B,QAAQW,aAC/BV,EAAOW,IAAIC,SACTW,KAAKF,SAASR,aACd,QACA,QACA,SACA,MACA,sBAIJhB,QAAQC,IAAI,sBAAuBgB,EAAOC,YAC1ClB,QAAQC,IAAI,yBAA0BW,EAAUM,YAEhDU,EAAY1B,QAAQiB,KAAO,4FAIbF,iKAKCL,iCAGjB,E,UC1HFmB,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://webpackkainext/./src/extension.ts","webpack://webpackkainext/external commonjs \"vscode\"","webpack://webpackkainext/webpack/bootstrap","webpack://webpackkainext/webpack/startup"],"sourcesContent":["import * as vscode from \"vscode\";\n\nexport function activate(context: vscode.ExtensionContext) {\n  console.log(\n    'Congratulations, your extension \"webpackkainext\" is now active!'\n  );\n\n  // Register the command for the webview\n  let webview = vscode.commands.registerCommand(\n    \"webpackkainext.webview\",\n    () => {\n      let panel = vscode.window.createWebviewPanel(\n        \"webview\",\n        \"Web View\",\n        vscode.ViewColumn.One,\n        {\n          enableScripts: true,\n        }\n      );\n\n      let scriptSrc = panel.webview.asWebviewUri(\n        vscode.Uri.joinPath(\n          context.extensionUri,\n          \"media\",\n          \"build\",\n          \"static\",\n          \"js\",\n          \"main.0538bf69.js\"\n        )\n      );\n      let cssSrc = panel.webview.asWebviewUri(\n        vscode.Uri.joinPath(\n          context.extensionUri,\n          \"media\",\n          \"build\",\n          \"static\",\n          \"css\",\n          \"main.885137a7.css\"\n        )\n      );\n\n      console.log(\"CSS Source:\", cssSrc.toString());\n      console.log(\"Script Source:\", scriptSrc.toString());\n\n      panel.webview.html = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>React App</title>\n    <link href=\"${cssSrc}\" rel=\"stylesheet\" />\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <script src=\"${scriptSrc}\"></script>\n  </body>\n</html>`;\n    }\n  );\n\n  // Register the webview view provider for the sidebar\n  context.subscriptions.push(\n    vscode.window.registerWebviewViewProvider(\n      \"webpackkainextSidebarView\",\n      new MyWebviewViewProvider(context)\n    )\n  );\n\n  context.subscriptions.push(webview);\n}\n\nclass MyWebviewViewProvider implements vscode.WebviewViewProvider {\n  private _context: vscode.ExtensionContext;\n\n  constructor(context: vscode.ExtensionContext) {\n    this._context = context;\n  }\n\n  resolveWebviewView(\n    webviewView: vscode.WebviewView,\n    context: vscode.WebviewViewResolveContext,\n    token: vscode.CancellationToken\n  ) {\n    webviewView.webview.options = {\n      enableScripts: true,\n    };\n\n    let scriptSrc = webviewView.webview.asWebviewUri(\n      vscode.Uri.joinPath(\n        this._context.extensionUri,\n        \"media\",\n        \"build\",\n        \"static\",\n        \"js\",\n        \"main.0538bf69.js\"\n      )\n    );\n    let cssSrc = webviewView.webview.asWebviewUri(\n      vscode.Uri.joinPath(\n        this._context.extensionUri,\n        \"media\",\n        \"build\",\n        \"static\",\n        \"css\",\n        \"main.885137a7.css\"\n      )\n    );\n\n    console.log(\"Sidebar CSS Source:\", cssSrc.toString());\n    console.log(\"Sidebar Script Source:\", scriptSrc.toString());\n\n    webviewView.webview.html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>React App</title>\n    <link href=\"${cssSrc}\" rel=\"stylesheet\" />\n</head>\n<body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <script src=\"${scriptSrc}\"></script>\n</body>\n</html>`;\n  }\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","console","log","webview","vscode","commands","registerCommand","panel","window","createWebviewPanel","ViewColumn","One","enableScripts","scriptSrc","asWebviewUri","Uri","joinPath","extensionUri","cssSrc","toString","html","subscriptions","push","registerWebviewViewProvider","MyWebviewViewProvider","_context","constructor","this","resolveWebviewView","webviewView","token","options","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}